{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","renderList","_this","props","songs","map","song","react_default","a","createElement","className","key","title","onClick","selectSong","this","Component","connect","state","type","payload","selectedSong","_ref","duration","App","components_SongList","components_SongDetail","combineReducers","arguments","length","undefined","action","ReactDOM","render","es","store","createStore","reducers","components_App","document","querySelector"],"mappings":"+NAIMA,6MACFC,WAAa,WACT,OAAOC,EAAKC,MAAMC,MAAMC,IAAI,SAACC,GACzB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,IAAKL,EAAKM,OAC5BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,oBACVG,QAAS,kBAAMX,EAAKC,MAAMW,WAAWR,KAFzC,WAMJC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACVJ,EAAKM,mFAQtB,OACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVK,KAAKd,qBAvBCe,aAmCRC,cANS,SAACC,GACrB,MAAO,CACHd,MAAOc,EAAMd,QAImB,CACpCU,WCvCsB,SAACR,GAEvB,MAAO,CACHa,KAAM,gBACNC,QAASd,KDkCFW,CAEZjB,GEfYiB,cANS,SAAAC,GACpB,MAAO,CACHZ,KAAMY,EAAMG,eAILJ,CAvBI,SAAAK,GAAc,IAAXhB,EAAWgB,EAAXhB,KAClB,OAAKA,EAKDC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,mBACYH,EAAKM,MACbL,EAAAC,EAAAC,cAAA,WAFJ,aAGeH,EAAKiB,WATjBhB,EAAAC,EAAAC,cAAA,8BCcAe,EAfH,SAAArB,GACR,OACII,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAACgB,EAAD,OAEJlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAACiB,EAAD,UCOLC,cAAgB,CAC3BvB,MAlBiB,WACjB,MAAO,CACH,CAAEQ,MAAO,+BAAgCW,SAAU,QACnD,CAAEX,MAAO,gBAAiBW,SAAU,QACpC,CAAEX,MAAO,uBAAwBW,SAAU,QAC3C,CAAEX,MAAO,gBAAiBW,SAAU,UAcxCF,aAVwB,WAAiC,IAAhCA,EAAgCO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAMG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzD,MAAoB,kBAAhBC,EAAOZ,KACAY,EAAOX,QAGXC,KCRXW,IAASC,OACL1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAUC,MAAOC,YAAYC,IACzB9B,EAAAC,EAAAC,cAAC6B,EAAD,OAEJC,SAASC,cAAc","file":"static/js/main.5c9ea22e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { selectSong } from '../actions';\n\nclass SongList extends Component {\n    renderList = () => {\n        return this.props.songs.map((song) => {\n            return (\n                <div className=\"item\" key={song.title}>\n                    <div className=\"right floated content\">\n                        <button \n                            className=\"ui button primary\"\n                            onClick={() => this.props.selectSong(song)} >\n                            Select\n                        </button>\n                    </div>\n                    <div className=\"content\">\n                        {song.title}\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"ui divided list\">\n                {this.renderList()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        songs: state.songs\n    };\n};\n\nexport default connect(mapStateToProps, {\n    selectSong: selectSong\n})(SongList);\n","// Action Creator\nexport const selectSong = (song) => {\n    // Return an action\n    return {\n        type: 'SONG_SELECTED',\n        payload: song\n    };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst SongDetail = ({ song }) => {\n    if (!song) {\n        return <div>Select a song</div>\n    }\n\n    return (\n        <div>\n            <h3>Details for: </h3>\n            <p>\n                Title: {song.title}\n                <br/>\n                Duration: {song.duration}\n                </p>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        song: state.selectedSong\n    };\n};\n\nexport default connect(mapStateToProps)(SongDetail);\n","import React from 'react';\nimport SongList from './SongList';\nimport SongDetail from './SongDetail';\n\nconst App = props => {\n    return (\n        <div className=\"ui container grid\">\n            <div className=\"ui row\">\n                <div className=\"column eight wide\">\n                    <SongList />\n                </div>\n                <div className=\"column eight wide\">\n                    <SongDetail />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nconst songsReducer = () => {\n    return [\n        { title: 'The Heart Want What It Wants', duration: '4:05' },\n        { title: 'Love Yourself', duration: '2:30' },\n        { title: 'No Tears Left To Cry', duration: '3:15' },\n        { title: 'Summer On You', duration: '1:45' }\n    ];\n};\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n    if (action.type === 'SONG_SELECTED') {\n        return action.payload;\n    }\n\n    return selectedSong;\n};\n\nexport default combineReducers({\n    songs: songsReducer,\n    selectedSong: selectedSongReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nReactDOM.render(\n    <Provider store={createStore(reducers)} >\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}